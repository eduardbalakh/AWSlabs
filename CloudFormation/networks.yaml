AWSTemplateFormatVersion: 2010-09-09
Description: Network Lab

Parameters:
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
  AmiID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: "The ID of the AMI."
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  VPCName:
    Description: CIDR range for our VPC
    Type: String
    Default: MYVPC

Resources:
  DemoVPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: 10.0.0.0/16
      Tags:
        -
          Key: Name
          Value: 'MyVPC'

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      AvailabilityZone: eu-central-1a
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-PrivateSubnet'

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt ElasticIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PrivateRouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref DemoVPC
      AvailabilityZone: eu-central-1a
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${VPCName}-PublicSubnet'

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref DemoVPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref DemoVPC

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiID
      InstanceType: t2.micro
      AvailabilityZone: eu-central-1a
      SubnetId: !Ref PublicSubnet
      KeyName: MyKeyPair
      SecurityGroupIds:
        - !Ref EC2SecurityGroup

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref DemoVPC
      GroupDescription: SG to allow SSH
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: '0.0.0.0/0'
      Tags:
        - Key: Name
          Value: EC2-SG

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiID
      InstanceType: t2.micro
      AvailabilityZone: eu-central-1a
      SubnetId: !Ref PrivateSubnet
      KeyName: MyKeyPair
      SecurityGroupIds:
        - !Ref EC2SecurityGroup

Outputs:
  VPCId:
    Description: vpc id
    Value: !Ref DemoVPC
  PublicSubnet:
    Description: SubnetId of public subnet
    Value: !Ref PublicSubnet

  PrivateSubnetA:
    Description: SubnetId of private subnet
    Value: !Ref PrivateSubnet

  PrivateInstanceId:
    Description: Private Instance Id
    Value: !Ref PrivateInstance

  PublicInstanceId:
    Description: public Instance Id
    Value: !Ref PublicInstance